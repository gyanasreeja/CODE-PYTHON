1. class Solution:
    def insertAtEnd(self, arr, val):
       # code here
       arr=arr.append(val)
       return arr
2.class Solution:
    def insertAtIndex(self, arr, index, val):
        # code here
        arr=arr.insert(index,val)
        return arr
3. def updateArray(arr,n,idx,element):
    #code here
    arr=arr.insert(idx,element)
4.def deleteFromArray(arr,n,idx):
    #code here
    del arr[idx]
    arr=arr.append(0)
    return arr
5. class Solution:
    def median(self, arr):
       n= sorted(arr)
       mid=len(arr)//2
       if mid%2==0:
           k=n[mid]+n[mid-1]
           k1=k//2
           return k1
       else:
           k=n[mid]
           
        #code here
    
    def mean(self, arr):
        total=sum(arr)
        n=len(arr)
        ans=total//n
        return ans
        #code here
Insertion Sort
Difficulty: EasyAccuracy: 66.61%Submissions: 243K+Points: 2Average Time: 15m
Given an array arr[] of positive integers.The task is to complete the insertsort() function which is used to implement Insertion Sort.

Examples:

Input: arr[] = [4, 1, 3, 9, 7]
Output: [1, 3, 4, 7, 9]
Explanation: The sorted array will be [1, 3, 4, 7, 9].
Input: arr[] = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Explanation: The sorted array will be [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].
Input: arr[] = [4, 1, 9]
Output: [1, 4, 9]
Explanation: The sorted array will be [1, 4, 9].
soluction:
class Solution:
    def insertionSort(self, arr):
        # code here
        n=len(arr)
        for i in range(1,n):
            x=arr[i]
            j=i-1
            while j>=0 and x<arr[j]:
                arr[j+1]=arr[j]
                j=j-1
            arr[j+1]=x
                
